version: '3.4'

services:
  catalogdb:
    image: mongo
    container_name: catalogdb
    restart: always
    volumes:
        - ${WEBAPP_STORAGE_HOME}/site:/data/db
       #- ./data:/data/db
    ports:
        - "27018:27017"
  
  basketdb:
    image: redis
    container_name: basketdb
    restart: always
    ports:
        - "6379:6379"
  orderdb:
    image: mcr.microsoft.com/mssql/server
    container_name : orderdb
    ports:
        - "1433:1433"
    environment:
        SA_PASSWORD: "r00t.R00T"
        ACCEPT_EULA: "Y"

  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: rabbitmq
    restart: always
    ports:
        - "5672:5672"
        - "15673:15672"

  catalog.api:
    image: ${DOCKER_REGISTRY-}catalogapi
    container_name: CatalogMicroservice
    build:
      context: .
      dockerfile: src/Catalog/Catalog.API/Dockerfile
    environment:
        - ASPNETCORE_ENVIRONMENT=Development
        - "CatalogDatabaseSettings:ConnectionString=mongodb://catalogdb:27017"
    depends_on:
        - catalogdb
    volumes:
        - ${HOME}/.microsoft/usersecrets/:/root/.microsoft/usersecrets
        - ${HOME}/.aspnet/https:/root/.aspnet/https/
    ports:
        - "8000:80"


  basket.api:
    image: ${DOCKER_REGISTRY-}basketapi
    container_name: BasketgMicroservice
    build:
      context: .
      dockerfile: src/Basket/Basket.API/Dockerfile
    environment:
        - ASPNETCORE_ENVIRONMENT=Development
        - "ConnectionStrings:Redis=basketdb:6379"
        - "EventBus:HostName=rabbitmq"
    depends_on:
        - basketdb
        - rabbitmq
    volumes:
        - ${HOME}/.microsoft/usersecrets/:/root/.microsoft/usersecrets
        - ${HOME}/.aspnet/https:/root/.aspnet/https/
    ports:
        - "8001:80"

  ordering.api:
    image: ${DOCKER_REGISTRY-}orderingapi
    container_name: OrderingMicroservice
    build:
      context: .
      dockerfile: src/Ordering/Ordering.API/Dockerfile
    restart: on-failure
    environment:
        - ASPNETCORE_ENVIRONMENT=Development
        - "ConnectionStrings:OrderConnection=Server=orderdb;Database=OrderDb;User Id=sa;Password=r00t.R00T"
        - "EventBus:HostName=rabbitmq"
    depends_on:
        - orderdb
        - rabbitmq
    volumes:
        - ${HOME}/.microsoft/usersecrets/:/root/.microsoft/usersecrets
        - ${HOME}/.aspnet/https:/root/.aspnet/https/
    ports:
        - "8002:80"

  apigateway:
    image: ${DOCKER_REGISTRY-}apigateway
    build:
      context: .
      dockerfile: src/ApiGateway/OcelotAPIGateway/Dockerfile
    environment:
        - ASPNETCORE_ENVIRONMENT=Development
    depends_on:
        - catalog.api
        - basket.api
        - ordering.api
    volumes:
        - ${HOME}/.microsoft/usersecrets/:/root/.microsoft/usersecrets
        - ${HOME}/.aspnet/https:/root/.aspnet/https/
    ports:
        - "7000:80"